Program -> Principal OptionalFunctionDefinitions
OptionalFunctionDefinitions -> FunctionDef OptionalFunctionDefinitions
OptionalFunctionDefinitions -> ''
Principal -> ruray hatun_ruray ( ) Block
FunctionDef -> ruray IDENTIFICADOR_TOKEN ( ParamListOpt ) TypeOpt Block
ParamListOpt -> ParamList
ParamListOpt -> ''
ParamList -> Param ParamTail
Param -> Type : IDENTIFICADOR_TOKEN
ParamTail -> , Param ParamTail
ParamTail -> ''
Type -> yupay
Type -> chiqi
Type -> chiqap
Type -> qillqa
TypeOpt -> Type
TypeOpt -> ''
Block -> { InstruccionesOpt }
InstruccionesOpt -> Instruccion InstruccionesOpt
InstruccionesOpt -> ''
Instruccion -> PrintStmt
Instruccion -> Bucle
Instruccion -> Estructura_If
Instruccion -> Retorno
Instruccion -> DeclaracionVariable
DeclaracionVariable -> var IDENTIFICADOR_TOKEN Type InicializacionOpt ;
VarOrId -> var ListaIdentificadores
VarOrId -> IDENTIFICADOR_TOKEN SimpleAssignmentRest
ListaIdentificadores -> id ListaIdentificadoresRest
ListaIdentificadoresRest -> , id ListaIdentificadoresRest
ListaIdentificadoresRest -> ''
SimpleAssignmentRest -> := Opciones
InicializacionOpt -> = Opciones
InicializacionOpt -> ''
PrintStmt -> imprimiy ( Expression ) ;
Opciones -> Expression
IncrementoStmt -> IDENTIFICADOR_TOKEN IncrementoOp
IncrementoOp -> IncrementoOpPlus
IncrementoStmt -> IncrementoOpMinus
IncrementoOpPlus -> ++
IncrementoOpMinus -> --
Expression -> TermLogico
TermLogico -> TermComparacion TermLogicoConti
TermLogicoConti -> OpcionComparacion Opciones
TermLogicoConti -> ''
TermComparacion -> Factor
Factor -> Unidad FactorConti
FactorConti -> ''
MulOp -> MulOpPacha
MulOp -> MulOpRakiy
MulOp -> MulOpModulo
MulOp -> MulOpSum
MulOp -> MulOpRes
MulOpPacha -> *
MulOpRakiy -> /
MulOpModulo -> %
MulOpSum -> +
MulOpRes -> -
Unidad -> Valor
Unidad -> ( Expression )
Valor -> YUPAY_TOKEN
Valor -> CHIQI_TOKEN
Valor -> CHIQAP_TOKEN
Valor -> QILLQA_TOKEN
Valor -> IDENTIFICADOR_TOKEN ValorPrima
ValorPrima -> ( ArgumentosFuncionOpt )
ValorPrima -> ''
IdentificadorOrFunctionCall -> IDENTIFICADOR_TOKEN IdentificadorOrFunctionCallPrima
IdentificadorOrFunctionCallPrima -> ( ArgumentosFuncionOpt )
IdentificadorOrFunctionCallPrima -> ''
ArgumentosFuncionOpt -> Expression MasArgumentosFuncion
ArgumentosFuncionOpt -> ''
MasArgumentosFuncion -> , Expression MasArgumentosFuncion
MasArgumentosFuncion -> ''
Bucle -> ForLoop
ForLoop -> para ( LoopInitialization ; ExpressionOpt ; LoopUpdateOpt ) Block
LoopInitialization -> IDENTIFICADOR_TOKEN := AsignacionBucle
LoopInitialization -> ''
AsignacionBucle -> IdentificadorOrFunctionCall
AsignacionBucle -> AsignacionBucleDato
AsignacionBucleDato -> Dato
ExpressionOpt -> Expression
ExpressionOpt -> ''
LoopUpdateOpt -> IncrementoStmt
LoopUpdateOpt -> ''
Estructura_If -> sichus ( Expression ) Block ElseOpcional
ElseOpcional -> ManaSichusBloque
ElseOpcional -> ElseOpcionalVacio
ManaSichusBloque -> mana_sichus ArgumentosElseIf Block ElseOpcional
ElseOpcionalVacio -> ''
ArgumentosElseIf -> ( Expression )
Retorno -> RetornoConValor
Retorno -> RetornoSinValor
RetornoConValor -> kutipay Expression ;
RetornoSinValor -> pakiy ;
RetornoContenidoOpt -> Expression
RetornoContenidoOpt -> ''
Dato -> YUPAY_TOKEN
Dato -> CHIQI_TOKEN
Dato -> CHIQAP_TOKEN_CHIQAQ
Dato -> CHIQAP_TOKEN_MANA_CHIQAQ
Dato -> QILLQA_TOKEN
CHIQAP_TOKEN_CHIQAQ -> chiqaq
CHIQAP_TOKEN_MANA_CHIQAQ -> mana_chiqaq
YUPAY_TOKEN -> num
CHIQI_TOKEN -> num.num
QILLQA_TOKEN -> texto
IDENTIFICADOR_TOKEN -> id
OpcionLogico -> OpcionLogicoWan
OpcionLogico -> OpcionLogicoUtaq
OpcionLogicoWan -> wan
OpcionLogicoUtaq -> utaq
OpcionComparacion -> OpcionComparacionIgual
OpcionComparacion -> OpcionComparacionNoIgual
OpcionComparacion -> OpcionComparacionMenor
OpcionComparacion -> OpcionComparacionMayor
OpcionComparacion -> OpcionComparacionMenorIgual
OpcionComparacion -> OpcionComparacionMayorIgual
OpcionComparacionIgual -> ==
OpcionComparacionNoIgual -> !=
OpcionComparacionMenor -> <
OpcionComparacionMayor -> >
OpcionComparacionMenorIgual -> <=
OpcionComparacionMayorIgual -> >=
